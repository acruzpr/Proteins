import numpy as np 
import math
import time 

#Makes 2-d array of all conforms 
#Access conform 1, contact 0 by conform = getConforms conform[1][0]
def getConforms():
  with open("idLineAlltest_200.txt","r") as file:
    conforms = [0] * 200
    indexcount = 0 
    for line in file:
      shape = list(line)
      if '\n' in shape:
	shape.remove('\n')
      shape = [int(i) for i in shape]
      conforms[indexcount] = shape
      indexcount += 1
    return conforms

def get1Conform(conform):
  with open("idLineAlltest_200.txt","r") as file:
    i = 0 
    for line in file:
      if i == conform: 
	shape = list(line)
	if '\n' in shape:
	  shape.remove('\n')
	shape = [int(i) for i in shape]
        return shape
      i+=1

def getSums(i):
  return sum(get1Conform(i))

#def writeSums(conforms):
      #sums = open("sumlinestest5.txt","a")
      #for i in conforms:
	#sums.write('%i\n' %(sum(i)))
##Reads file of sums of all contacts
#def getSums(i):
  #with open("sumlinestest4.txt","r") as file:
    #sums = file.read()
    #sums = sums.splitlines()
    #return int(sums[i])

def getNij(i,j):
  conform1 = get1Conform(i)
  conform2 = get1Conform(j)
  counter = 0
  for i in range(len(conform1)):
    if conform1[i] == 1 and conform2[i] == 1:
	counter += 1
  return counter 
	
def getnegd(i,j):
  nij = getNij(i,j)
  ni = getSums(i)
  nj = getSums(j)
  num = float(nij)/(ni+nj)
  num *=2.0
  num = 1.0 - num 
  return num * -1

#START -->INPUT 
def makeW():
  start = time.time()
  conforms = getConforms()
  size = len(conforms)
  w = np.empty([size,size])
  for (i,j), value in np.ndenumerate(w):
      w[i][j] = np.exp(getnegd(i,j))
     # w[j][i] = np.exp(getnegd(i,j))
  return w


def makeD(w):
  d = np.zeros((len(w[0]),len(w[0])))
  for i in range(len(w[0])):
    d[i][i] = np.sum(w[i])
  return d

def makeLaplacian(d,w):
  return d - w

def eigh(dwd):
  return np.linalg.eigh(dwd)
  
def DWD(d,w):
  for i in range(len(d)):
    temp = d[i][i]
    d[i][i] = 1/(temp**.5)
  return np.dot(d,w).dot(d)

#WRITE TO FILE --> np.savetxt('DMatrix.txt',d, fmt ='%f')
def makeDhalf(d):
  for i in range(len(d)):
    temp = d[i][i]
    d[i][i] = 1/(temp**.5)
  return d 

def makeGoodW(w):
  start = time.time()
  for (i,j), value in np.ndenumerate(w):
    if(w[i][j]) < .5:
      w[i][j] = 0 
  np.savetxt('GoodWMatrix500.txt',w, fmt = "%f")

      
